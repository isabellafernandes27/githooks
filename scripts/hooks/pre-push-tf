#!/bin/sh

# Ticket DDDS-18: Terraform fmt
# Ticket DDDS-19: Terraform validate

# Check if /terraform directory exists
if [ ! -d "terraform" ]; then
  echo "Directory 'terraform' not found. Aborting push."
  exit 1
fi

terraform_files_changed=0  # Initialize flag

# Read refs from stdin
while read local_ref local_sha remote_ref remote_sha
do
  # Determine diff range
  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
    # New branch or new ref, diff against empty tree
    diff_range="$local_sha"
  else
    diff_range="$remote_sha..$local_sha"
  fi

  # Get list of changed .tf files under terraform/
  changed_files=$(git diff --name-only "$diff_range" -- 'terraform/*.tf')

  if [ -z "$changed_files" ]; then
    # No terraform files changed, continue to next ref or allow push
    continue
  fi
  
  terraform_files_changed=1  # Mark that terraform files changed

  # Check formatting on each changed file
  for file in $changed_files; do
    if ! terraform fmt -check "$file"; then
      echo "Terraform file '$file' is not properly formatted. Please run 'terraform fmt $file'."
      exit 1
    fi
  done
done

# Ticket DDDS-19: Terraform validate

# If terraform files changed, run terraform validate
if [ "$terraform_files_changed" -eq 1 ]; then
  cd terraform || {
    echo "Failed to enter terraform directory."
    exit 1
  }
  # Initialize terraform (no backend)
  terraform init -backend=false -input=false >/dev/null 2>&1

  if ! terraform validate; then
    echo "Terraform validation failed. Please fix errors before pushing."
    exit 1
  fi
fi

# All checks passed or no terraform files changed
exit 0
