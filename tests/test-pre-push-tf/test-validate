#!/bin/bash
set -e

# Colors for messages
RED=$'\033[0;31m'
GREEN=$'\033[0;32m'
ORANGE=$'\033[0;33m'
NOCOLOR=$'\033[0m'

echo "Starting pre-push terraform validation hook tests..."

# Load test-utils
TEST_SCRIPT_PATH="$(realpath "${BASH_SOURCE[0]}")"
source "$(dirname "$TEST_SCRIPT_PATH")/../common/test-utils"

# Helper to simulate a push
simulate_push() {
  local_ref=$(git rev-parse --abbrev-ref HEAD)
  local_sha=$(git rev-parse HEAD)
  remote_ref="refs/heads/main"
  remote_sha="0000000000000000000000000000000000000000"

  local shell_bin=${1:-bash}  # default to "bash"
  echo "$local_ref $local_sha $remote_ref $remote_sha" | $shell_bin .git/hooks/pre-push-tf
}

# Create a fresh repo
REPO_DIR=$(create_temp_git_repo)
cd "$REPO_DIR"

# Install pre-push hook
install_hook pre-push-tf

echo "Test 1: Valid Terraform config"
copy_test_data valid "$TEST_SCRIPT_PATH"
git add terraform/*
git commit -m "Add valid terraform file" >/dev/null

if simulate_push; then
  echo "${GREEN}PASS: Push succeeded with valid terraform config${NOCOLOR}"
else
  echo "${RED}FAIL: Push blocked unexpectedly for valid terraform${NOCOLOR}"
  exit 1
fi

reset_git

echo "Test 2: Invalid Terraform config"
copy_test_data invalid-validate "$TEST_SCRIPT_PATH"
git add terraform/*
git commit -m "Add invalid terraform file" >/dev/null

if simulate_push; then
  echo "${RED}FAIL: Push succeeded but should have been blocked due to terraform validate${NOCOLOR}"
  exit 1
else
  echo "${GREEN}PASS: Push blocked as expected due to terraform validate failure${NOCOLOR}"
fi

reset_git

echo "Test 3: No terraform files altered"
copy_test_data non-tf "$TEST_SCRIPT_PATH" documentation
git add documentation/*
git commit -m "Add non-terraform files" >/dev/null

if simulate_push; then
  echo "${GREEN}PASS: Push succeeded with no terraform changes${NOCOLOR}"
else
  echo "${RED}FAIL: Push blocked unexpectedly when no terraform files changed${NOCOLOR}"
  exit 1
fi

reset_git

echo "Test 4: Deleted terraform file (should skip validation)"
copy_test_data deleted "$TEST_SCRIPT_PATH" terraform
git add terraform/*
git commit -m "Add file to delete" >/dev/null

# Delete it
git rm terraform/main.tf >/dev/null
git commit -m "Delete terraform file" >/dev/null

if simulate_push; then
  echo "${GREEN}PASS: Push succeeded when deleting terraform file${NOCOLOR}"
else
  echo "${RED}FAIL: Push blocked unexpectedly on deleted terraform file${NOCOLOR}"
  exit 1
fi

echo "Test 3: Bash < 4.0 (simulate)"
if simulate_push /bin/bash; then
  echo "${GREEN}PASS: Hook skipped as expected for Bash < 4.0${NOCOLOR}"
else
  echo "${RED}FAIL: Hook did not skip for old Bash version${NOCOLOR}"
  exit 1
fi


echo "All validation tests completed."